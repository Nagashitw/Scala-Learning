format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> B:\Code\example\target\scala-2.11\test-classes
compile options:
1 items
0 -> -deprecation
javac options:
0 items
compiler version:
1 items
0 -> 2.11.7
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
16 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$1.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$10$$anonfun$apply$mcV$sp$2.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$10.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$11.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$12.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$13.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$2.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$3.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$4$$anonfun$apply$mcV$sp$1.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$4.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$5.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$6.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$7.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$8.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$9.class
B:\Code\example\src\test\scala\example\ListsSuite.scala -> B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite.class
binary dependencies:
4 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> C:\Program Files (x86)\Java\jre1.8.0_91\lib\rt.jar
B:\Code\example\src\test\scala\example\ListsSuite.scala -> C:\Users\Rafael\.ivy2\cache\junit\junit\jars\junit-4.10.jar
B:\Code\example\src\test\scala\example\ListsSuite.scala -> C:\Users\Rafael\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar
B:\Code\example\src\test\scala\example\ListsSuite.scala -> C:\Users\Rafael\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.4.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.Lists$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
16 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$1
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$10
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$10$$anonfun$apply$mcV$sp$2
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$11
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$12
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$13
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$2
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$3
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$4
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$4$$anonfun$apply$mcV$sp$1
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$5
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$6
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$7
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$8
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example.ListsSuite$$anonfun$9
used names:
52 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> $org_scalatest_assert_macro_expr
B:\Code\example\src\test\scala\example\ListsSuite.scala -> $org_scalatest_assert_macro_left
B:\Code\example\src\test\scala\example\ListsSuite.scala -> $org_scalatest_assert_macro_right
B:\Code\example\src\test\scala\example\ListsSuite.scala -> <
B:\Code\example\src\test\scala\example\ListsSuite.scala -> <init>
B:\Code\example\src\test\scala\example\ListsSuite.scala -> ==
B:\Code\example\src\test\scala\example\ListsSuite.scala -> ===
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Bool
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Boolean
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Equality
B:\Code\example\src\test\scala\example\ListsSuite.scala -> FunSuite
B:\Code\example\src\test\scala\example\ListsSuite.scala -> IllegalArgumentException
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Int
B:\Code\example\src\test\scala\example\ListsSuite.scala -> JUnitRunner
B:\Code\example\src\test\scala\example\ListsSuite.scala -> List
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Lists
B:\Code\example\src\test\scala\example\ListsSuite.scala -> ListsSuite
B:\Code\example\src\test\scala\example\ListsSuite.scala -> ManifestFactory
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Matchers
B:\Code\example\src\test\scala\example\ListsSuite.scala -> Nil
B:\Code\example\src\test\scala\example\ListsSuite.scala -> RunWith
B:\Code\example\src\test\scala\example\ListsSuite.scala -> apply
B:\Code\example\src\test\scala\example\ListsSuite.scala -> assert
B:\Code\example\src\test\scala\example\ListsSuite.scala -> assertionsHelper
B:\Code\example\src\test\scala\example\ListsSuite.scala -> binaryMacroBool
B:\Code\example\src\test\scala\example\ListsSuite.scala -> classType
B:\Code\example\src\test\scala\example\ListsSuite.scala -> convertToEqualizer
B:\Code\example\src\test\scala\example\ListsSuite.scala -> default
B:\Code\example\src\test\scala\example\ListsSuite.scala -> distinct
B:\Code\example\src\test\scala\example\ListsSuite.scala -> example
B:\Code\example\src\test\scala\example\ListsSuite.scala -> immutable
B:\Code\example\src\test\scala\example\ListsSuite.scala -> intNotZero
B:\Code\example\src\test\scala\example\ListsSuite.scala -> intercept
B:\Code\example\src\test\scala\example\ListsSuite.scala -> isEmpty
B:\Code\example\src\test\scala\example\ListsSuite.scala -> isListEmpty
B:\Code\example\src\test\scala\example\ListsSuite.scala -> isNegative
B:\Code\example\src\test\scala\example\ListsSuite.scala -> junit
B:\Code\example\src\test\scala\example\ListsSuite.scala -> list
B:\Code\example\src\test\scala\example\ListsSuite.scala -> macroAssert
B:\Code\example\src\test\scala\example\ListsSuite.scala -> max
B:\Code\example\src\test\scala\example\ListsSuite.scala -> org
B:\Code\example\src\test\scala\example\ListsSuite.scala -> package
B:\Code\example\src\test\scala\example\ListsSuite.scala -> reflect
B:\Code\example\src\test\scala\example\ListsSuite.scala -> runner
B:\Code\example\src\test\scala\example\ListsSuite.scala -> scala
B:\Code\example\src\test\scala\example\ListsSuite.scala -> scalactic
B:\Code\example\src\test\scala\example\ListsSuite.scala -> scalatest
B:\Code\example\src\test\scala\example\ListsSuite.scala -> simpleMacroBool
B:\Code\example\src\test\scala\example\ListsSuite.scala -> size
B:\Code\example\src\test\scala\example\ListsSuite.scala -> sum
B:\Code\example\src\test\scala\example\ListsSuite.scala -> test
B:\Code\example\src\test\scala\example\ListsSuite.scala -> x
product stamps:
16 items
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$1.class -> lastModified(1466877664804)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$10$$anonfun$apply$mcV$sp$2.class -> lastModified(1466877664809)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$10.class -> lastModified(1466877664806)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$11.class -> lastModified(1466877664811)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$12.class -> lastModified(1466877664814)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$13.class -> lastModified(1466877664817)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$2.class -> lastModified(1466877664828)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$3.class -> lastModified(1466877664831)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$4$$anonfun$apply$mcV$sp$1.class -> lastModified(1466877664835)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$4.class -> lastModified(1466877664833)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$5.class -> lastModified(1466877664838)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$6.class -> lastModified(1466877664842)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$7.class -> lastModified(1466877664845)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$8.class -> lastModified(1466877664848)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite$$anonfun$9.class -> lastModified(1466877664851)
B:\Code\example\target\scala-2.11\test-classes\example\ListsSuite.class -> lastModified(1466877664797)
source stamps:
1 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> hash(6a71a22cd9b48f19e9558b112d461cb01d20e6d1)
binary stamps:
4 items
C:\Program Files (x86)\Java\jre1.8.0_91\lib\rt.jar -> lastModified(1466679432952)
C:\Users\Rafael\.ivy2\cache\junit\junit\jars\junit-4.10.jar -> lastModified(1317323535000)
C:\Users\Rafael\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar -> lastModified(1438617791000)
C:\Users\Rafael\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.4.jar -> lastModified(1422515700000)
class names:
4 items
C:\Program Files (x86)\Java\jre1.8.0_91\lib\rt.jar -> java.lang.IllegalArgumentException
C:\Users\Rafael\.ivy2\cache\junit\junit\jars\junit-4.10.jar -> org.junit.runner.RunWith
C:\Users\Rafael\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.7.jar -> scala.collection.SeqLike
C:\Users\Rafael\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-2.2.4.jar -> org.scalatest.Matchers
internal apis:
1 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> 

external apis:
1 items
example.Lists$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAeScPEAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cJ+JZ/Z0AAZub3RpZnlzcQB+AAzvbHvHdAAFTGlzdHNzcQB+AAwlWjIFdAAEd2FpdHNxAH4ADIyCLrp0AAxtYXhSZWN1cnNpdmVzcQB+AAxUCvKYdAANJGFzSW5zdGFuY2VPZnNxAH4ADMqhc890AAZlcXVhbHNzcQB+AAxkrHYgdAAMYXNJbnN0YW5jZU9mc3EAfgAM0gvJyXQADHN5bmNocm9uaXplZHNxAH4ADF3Oukh0AA0kaXNJbnN0YW5jZU9mc3EAfgAMupHI73QACW5vdGlmeUFsbHNxAH4ADC2WrO90AAxpc0luc3RhbmNlT2ZzcQB+AAxIla+8dAADbWF4c3EAfgAM4rk7cnQAAj09c3EAfgAMwvuMP3QABWNsb25lc3EAfgAMg9S2P3QACHRvU3RyaW5nc3EAfgAMek0ZaXQAAiE9c3EAfgAM09gz2HQACGdldENsYXNzc3EAfgAMfE+vL3QAAm5lc3EAfgAMLs5GbnQAAmVxc3EAfgAMuQ1/kHQAA3N1bXNxAH4ADNjIkWF0AAIjI3NxAH4ADIKJtTl0AAhmaW5hbGl6ZXNxAH4ADO2DqMR0AAhoYXNoQ29kZXNyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEV4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0AA1leGFtcGxlLkxpc3RzdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAXNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBwc3EAfgBdAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBFTAAJaW5oZXJpdGVkcQB+AEVMAAdwYXJlbnRzcQB+AEV4cQB+AGRzcQB+AF0BdXEAfgBAAAAAAHBzcQB+AF0BdXEAfgBAAAAAAHBzcQB+AF0BdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBjc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB8dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB9c3EAfgBwdAADQW55c3EAfgB0c3EAfgB3dXEAfgB6AAAAAnNxAH4AfHQABXNjYWxhcQB+AINwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAB2V4YW1wbGVzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVWIuMf9dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAKUI6XENvZGVcZXhhbXBsZVx0YXJnZXRcc2NhbGEtMi4xMVxjbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUw+FbZ1+QtCxfp20kV+A12vmRgCY=
source infos:
1 items
B:\Code\example\src\test\scala\example\ListsSuite.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVYRlyGB1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQALkI6XENvZGVcZXhhbXBsZVx0YXJnZXRcc2NhbGEtMi4xMVx0ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABVYi41Z51cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQALkI6XENvZGVcZXhhbXBsZVx0YXJnZXRcc2NhbGEtMi4xMVx0ZXN0LWNsYXNzZXN0AAEv
